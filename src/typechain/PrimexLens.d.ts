/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface PrimexLensInterface extends ethers.utils.Interface {
  functions: {
    "getAllBucketsFactory(address,address,address,bool)": FunctionFragment;
    "getArrayOpenPositionDataByBucket(address,address,uint256,uint256)": FunctionFragment;
    "getArrayOpenPositionDataByTrader(address,address,uint256,uint256)": FunctionFragment;
    "getAssetMetadata(address,address)": FunctionFragment;
    "getBucket(address,address)": FunctionFragment;
    "getBucketsArray(address[],address,address,bool)": FunctionFragment;
    "getChainlinkLatestRoundData(address[])": FunctionFragment;
    "getLMBucketInfo(address,string)": FunctionFragment;
    "getLenderInfo(address,string,address)": FunctionFragment;
    "getLimitOrdersWithConditions(address,uint256,uint256)": FunctionFragment;
    "getLiquidationPrice(address,string,uint256,address,uint256)": FunctionFragment;
    "getOpenPositionData(address,uint256)": FunctionFragment;
    "getOpenPositionsWithConditions(address,uint256,uint256)": FunctionFragment;
    "getPositionMaxDecrease(address,uint256)": FunctionFragment;
    "getPositionStatus(address,uint256,tuple[])": FunctionFragment;
    "getSupportedAsset(address,address,address)": FunctionFragment;
    "getSupportedAssetArray(address,address[],address)": FunctionFragment;
    "getTokenArrayMetadata(address[],address)": FunctionFragment;
    "getTokenMetadata(address,address)": FunctionFragment;
    "isStopLossReached(address,uint256)": FunctionFragment;
    "isTakeProfitReached(address,uint256,tuple[])": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "takeProfitStopLossCCM()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAllBucketsFactory",
    values: [string, string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "getArrayOpenPositionDataByBucket",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArrayOpenPositionDataByTrader",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAssetMetadata",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getBucket",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getBucketsArray",
    values: [string[], string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "getChainlinkLatestRoundData",
    values: [string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getLMBucketInfo",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getLenderInfo",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getLimitOrdersWithConditions",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLiquidationPrice",
    values: [string, string, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOpenPositionData",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOpenPositionsWithConditions",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPositionMaxDecrease",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPositionStatus",
    values: [
      string,
      BigNumberish,
      {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedAsset",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedAssetArray",
    values: [string, string[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenArrayMetadata",
    values: [string[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenMetadata",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isStopLossReached",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isTakeProfitReached",
    values: [
      string,
      BigNumberish,
      {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "takeProfitStopLossCCM",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getAllBucketsFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArrayOpenPositionDataByBucket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArrayOpenPositionDataByTrader",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAssetMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBucket", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getBucketsArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getChainlinkLatestRoundData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLMBucketInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLenderInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLimitOrdersWithConditions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLiquidationPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOpenPositionData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOpenPositionsWithConditions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPositionMaxDecrease",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPositionStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedAssetArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenArrayMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isStopLossReached",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTakeProfitReached",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "takeProfitStopLossCCM",
    data: BytesLike
  ): Result;

  events: {};
}

export class PrimexLens extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PrimexLensInterface;

  functions: {
    getAllBucketsFactory(
      _bucketFactory: string,
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        })[]
      ]
    >;

    getArrayOpenPositionDataByBucket(
      _positionManager: string,
      _bucket: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[],
        BigNumber
      ] & {
        positionsData: ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[];
        newCursor: BigNumber;
      }
    >;

    getArrayOpenPositionDataByTrader(
      _positionManager: string,
      _trader: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[],
        BigNumber
      ] & {
        positionsData: ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[];
        newCursor: BigNumber;
      }
    >;

    getAssetMetadata(
      _bucket: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ]
    >;

    getBucket(
      _bucket: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        }
      ]
    >;

    getBucketsArray(
      _buckets: string[],
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        })[]
      ]
    >;

    getChainlinkLatestRoundData(
      _feeds: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          roundId: BigNumber;
          answer: BigNumber;
          startedAt: BigNumber;
          updatedAt: BigNumber;
          answeredInRound: BigNumber;
        })[]
      ]
    >;

    getLMBucketInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        }
      ]
    >;

    getLenderInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      user: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        }
      ]
    >;

    getLimitOrdersWithConditions(
      _limitOrderManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          limitOrderData: [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          openConditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[],
        BigNumber
      ] & {
        limitOrdersWithConditions: ([
          [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          limitOrderData: [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          openConditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[];
        newCursor: BigNumber;
      }
    >;

    "getLiquidationPrice(address,string,uint256,address,uint256)"(
      _positionManager: string,
      _bucket: string,
      _borrowedAmount: BigNumberish,
      _positionAsset: string,
      _positionAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getLiquidationPrice(address,uint256)"(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getOpenPositionData(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        }
      ]
    >;

    getOpenPositionsWithConditions(
      _positionManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          positionData: [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          conditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[],
        BigNumber
      ] & {
        openPositionsWithConditions: ([
          [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          positionData: [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          conditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[];
        newCursor: BigNumber;
      }
    >;

    getPositionMaxDecrease(
      _pm: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPositionStatus(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getSupportedAsset(
      _bucket: string,
      _asset: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        }
      ]
    >;

    getSupportedAssetArray(
      _bucket: string,
      _assets: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[]
      ]
    >;

    getTokenArrayMetadata(
      _tokens: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        })[]
      ]
    >;

    getTokenMetadata(
      _token: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        }
      ]
    >;

    isStopLossReached(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isTakeProfitReached(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    takeProfitStopLossCCM(overrides?: CallOverrides): Promise<[string]>;
  };

  getAllBucketsFactory(
    _bucketFactory: string,
    _user: string,
    _positionManager: string,
    _showDeprecated: boolean,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string,
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[],
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      BigNumber,
      BigNumber,
      [
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        liquidityMiningRewardDistributor: string;
        isBucketLaunched: boolean;
        accumulatingAmount: BigNumber;
        deadlineTimestamp: BigNumber;
        stabilizationDuration: BigNumber;
        stabilizationEndTimestamp: BigNumber;
        maxAmountPerUser: BigNumber;
        maxDuration: BigNumber;
        maxStabilizationEndTimestamp: BigNumber;
      },
      [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      },
      [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      },
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        urOptimal: BigNumber;
        k0: BigNumber;
        k1: BigNumber;
        b0: BigNumber;
        b1: BigNumber;
      },
      BigNumber
    ] & {
      bucketAddress: string;
      name: string;
      asset: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      bar: BigNumber;
      lar: BigNumber;
      supply: BigNumber;
      demand: BigNumber;
      availableLiquidity: BigNumber;
      utilizationRatio: BigNumber;
      supportedAssets: ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[];
      pToken: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      debtToken: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      feeBuffer: BigNumber;
      withdrawalFeeRate: BigNumber;
      miningParams: [
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        liquidityMiningRewardDistributor: string;
        isBucketLaunched: boolean;
        accumulatingAmount: BigNumber;
        deadlineTimestamp: BigNumber;
        stabilizationDuration: BigNumber;
        stabilizationEndTimestamp: BigNumber;
        maxAmountPerUser: BigNumber;
        maxDuration: BigNumber;
        maxStabilizationEndTimestamp: BigNumber;
      };
      lenderInfo: [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      };
      lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      };
      estimatedBar: BigNumber;
      estimatedLar: BigNumber;
      isDeprecated: boolean;
      isDelisted: boolean;
      barCalcParams: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        urOptimal: BigNumber;
        k0: BigNumber;
        k1: BigNumber;
        b0: BigNumber;
        b1: BigNumber;
      };
      maxTotalDeposit: BigNumber;
    })[]
  >;

  getArrayOpenPositionDataByBucket(
    _positionManager: string,
    _bucket: string,
    _cursor: BigNumberish,
    _count: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([
        BigNumber,
        [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        },
        [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        bucket: [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        };
        pair: [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ];
        positionSize: BigNumber;
        liquidationPrice: BigNumber;
        stopLossPrice: BigNumber;
        takeProfitPrice: BigNumber;
        debt: BigNumber;
        depositAmount: BigNumber;
        createdAt: BigNumber;
      })[],
      BigNumber
    ] & {
      positionsData: ([
        BigNumber,
        [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        },
        [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        bucket: [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        };
        pair: [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ];
        positionSize: BigNumber;
        liquidationPrice: BigNumber;
        stopLossPrice: BigNumber;
        takeProfitPrice: BigNumber;
        debt: BigNumber;
        depositAmount: BigNumber;
        createdAt: BigNumber;
      })[];
      newCursor: BigNumber;
    }
  >;

  getArrayOpenPositionDataByTrader(
    _positionManager: string,
    _trader: string,
    _cursor: BigNumberish,
    _count: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([
        BigNumber,
        [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        },
        [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        bucket: [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        };
        pair: [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ];
        positionSize: BigNumber;
        liquidationPrice: BigNumber;
        stopLossPrice: BigNumber;
        takeProfitPrice: BigNumber;
        debt: BigNumber;
        depositAmount: BigNumber;
        createdAt: BigNumber;
      })[],
      BigNumber
    ] & {
      positionsData: ([
        BigNumber,
        [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        },
        [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        bucket: [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        };
        pair: [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ];
        positionSize: BigNumber;
        liquidationPrice: BigNumber;
        stopLossPrice: BigNumber;
        takeProfitPrice: BigNumber;
        debt: BigNumber;
        depositAmount: BigNumber;
        createdAt: BigNumber;
      })[];
      newCursor: BigNumber;
    }
  >;

  getAssetMetadata(
    _bucket: string,
    _asset: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, boolean, BigNumber, BigNumber] & {
      id: BigNumber;
      isSupported: boolean;
      pairPriceDrop: BigNumber;
      maxLeverage: BigNumber;
    }
  >;

  getBucket(
    _bucket: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[],
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      BigNumber,
      BigNumber,
      [
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        liquidityMiningRewardDistributor: string;
        isBucketLaunched: boolean;
        accumulatingAmount: BigNumber;
        deadlineTimestamp: BigNumber;
        stabilizationDuration: BigNumber;
        stabilizationEndTimestamp: BigNumber;
        maxAmountPerUser: BigNumber;
        maxDuration: BigNumber;
        maxStabilizationEndTimestamp: BigNumber;
      },
      [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      },
      [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      },
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        urOptimal: BigNumber;
        k0: BigNumber;
        k1: BigNumber;
        b0: BigNumber;
        b1: BigNumber;
      },
      BigNumber
    ] & {
      bucketAddress: string;
      name: string;
      asset: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      bar: BigNumber;
      lar: BigNumber;
      supply: BigNumber;
      demand: BigNumber;
      availableLiquidity: BigNumber;
      utilizationRatio: BigNumber;
      supportedAssets: ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[];
      pToken: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      debtToken: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      feeBuffer: BigNumber;
      withdrawalFeeRate: BigNumber;
      miningParams: [
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        liquidityMiningRewardDistributor: string;
        isBucketLaunched: boolean;
        accumulatingAmount: BigNumber;
        deadlineTimestamp: BigNumber;
        stabilizationDuration: BigNumber;
        stabilizationEndTimestamp: BigNumber;
        maxAmountPerUser: BigNumber;
        maxDuration: BigNumber;
        maxStabilizationEndTimestamp: BigNumber;
      };
      lenderInfo: [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      };
      lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      };
      estimatedBar: BigNumber;
      estimatedLar: BigNumber;
      isDeprecated: boolean;
      isDelisted: boolean;
      barCalcParams: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        urOptimal: BigNumber;
        k0: BigNumber;
        k1: BigNumber;
        b0: BigNumber;
        b1: BigNumber;
      };
      maxTotalDeposit: BigNumber;
    }
  >;

  getBucketsArray(
    _buckets: string[],
    _user: string,
    _positionManager: string,
    _showDeprecated: boolean,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string,
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[],
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      BigNumber,
      BigNumber,
      [
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        liquidityMiningRewardDistributor: string;
        isBucketLaunched: boolean;
        accumulatingAmount: BigNumber;
        deadlineTimestamp: BigNumber;
        stabilizationDuration: BigNumber;
        stabilizationEndTimestamp: BigNumber;
        maxAmountPerUser: BigNumber;
        maxDuration: BigNumber;
        maxStabilizationEndTimestamp: BigNumber;
      },
      [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      },
      [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      },
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        urOptimal: BigNumber;
        k0: BigNumber;
        k1: BigNumber;
        b0: BigNumber;
        b1: BigNumber;
      },
      BigNumber
    ] & {
      bucketAddress: string;
      name: string;
      asset: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      bar: BigNumber;
      lar: BigNumber;
      supply: BigNumber;
      demand: BigNumber;
      availableLiquidity: BigNumber;
      utilizationRatio: BigNumber;
      supportedAssets: ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[];
      pToken: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      debtToken: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      feeBuffer: BigNumber;
      withdrawalFeeRate: BigNumber;
      miningParams: [
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        liquidityMiningRewardDistributor: string;
        isBucketLaunched: boolean;
        accumulatingAmount: BigNumber;
        deadlineTimestamp: BigNumber;
        stabilizationDuration: BigNumber;
        stabilizationEndTimestamp: BigNumber;
        maxAmountPerUser: BigNumber;
        maxDuration: BigNumber;
        maxStabilizationEndTimestamp: BigNumber;
      };
      lenderInfo: [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      };
      lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      };
      estimatedBar: BigNumber;
      estimatedLar: BigNumber;
      isDeprecated: boolean;
      isDelisted: boolean;
      barCalcParams: [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        urOptimal: BigNumber;
        k0: BigNumber;
        k1: BigNumber;
        b0: BigNumber;
        b1: BigNumber;
      };
      maxTotalDeposit: BigNumber;
    })[]
  >;

  getChainlinkLatestRoundData(
    _feeds: string[],
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
      roundId: BigNumber;
      answer: BigNumber;
      startedAt: BigNumber;
      updatedAt: BigNumber;
      answeredInRound: BigNumber;
    })[]
  >;

  getLMBucketInfo(
    liquidityMiningRewardDistributor: string,
    bucketName: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      pmxAmount: BigNumber;
      withdrawnRewards: BigNumber;
      totalPoints: BigNumber;
    }
  >;

  getLenderInfo(
    liquidityMiningRewardDistributor: string,
    bucketName: string,
    user: string,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      BigNumber,
      [BigNumber, BigNumber, BigNumber] & {
        minReward: BigNumber;
        maxReward: BigNumber;
        extraReward: BigNumber;
      }
    ] & {
      amountInMining: BigNumber;
      currentPercent: BigNumber;
      rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
        minReward: BigNumber;
        maxReward: BigNumber;
        extraReward: BigNumber;
      };
    }
  >;

  getLimitOrdersWithConditions(
    _limitOrderManager: string,
    _cursor: BigNumberish,
    _count: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([
        [
          string,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          BigNumber,
          string
        ] & {
          bucket: string;
          positionAsset: string;
          depositAsset: string;
          depositAmount: BigNumber;
          feeToken: string;
          protocolFee: BigNumber;
          trader: string;
          deadline: BigNumber;
          id: BigNumber;
          leverage: BigNumber;
          shouldOpenPosition: boolean;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        },
        ([BigNumber, string] & { managerType: BigNumber; params: string })[]
      ] & {
        limitOrderData: [
          string,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          BigNumber,
          string
        ] & {
          bucket: string;
          positionAsset: string;
          depositAsset: string;
          depositAmount: BigNumber;
          feeToken: string;
          protocolFee: BigNumber;
          trader: string;
          deadline: BigNumber;
          id: BigNumber;
          leverage: BigNumber;
          shouldOpenPosition: boolean;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        };
        openConditionsData: ([BigNumber, string] & {
          managerType: BigNumber;
          params: string;
        })[];
      })[],
      BigNumber
    ] & {
      limitOrdersWithConditions: ([
        [
          string,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          BigNumber,
          string
        ] & {
          bucket: string;
          positionAsset: string;
          depositAsset: string;
          depositAmount: BigNumber;
          feeToken: string;
          protocolFee: BigNumber;
          trader: string;
          deadline: BigNumber;
          id: BigNumber;
          leverage: BigNumber;
          shouldOpenPosition: boolean;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        },
        ([BigNumber, string] & { managerType: BigNumber; params: string })[]
      ] & {
        limitOrderData: [
          string,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          BigNumber,
          BigNumber,
          string
        ] & {
          bucket: string;
          positionAsset: string;
          depositAsset: string;
          depositAmount: BigNumber;
          feeToken: string;
          protocolFee: BigNumber;
          trader: string;
          deadline: BigNumber;
          id: BigNumber;
          leverage: BigNumber;
          shouldOpenPosition: boolean;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        };
        openConditionsData: ([BigNumber, string] & {
          managerType: BigNumber;
          params: string;
        })[];
      })[];
      newCursor: BigNumber;
    }
  >;

  "getLiquidationPrice(address,string,uint256,address,uint256)"(
    _positionManager: string,
    _bucket: string,
    _borrowedAmount: BigNumberish,
    _positionAsset: string,
    _positionAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getLiquidationPrice(address,uint256)"(
    _positionManager: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOpenPositionData(
    _positionManager: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      [
        string,
        string,
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[],
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        },
        [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        },
        [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        },
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        },
        BigNumber
      ] & {
        bucketAddress: string;
        name: string;
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        bar: BigNumber;
        lar: BigNumber;
        supply: BigNumber;
        demand: BigNumber;
        availableLiquidity: BigNumber;
        utilizationRatio: BigNumber;
        supportedAssets: ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[];
        pToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        debtToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        feeBuffer: BigNumber;
        withdrawalFeeRate: BigNumber;
        miningParams: [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        };
        lenderInfo: [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        };
        lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        };
        estimatedBar: BigNumber;
        estimatedLar: BigNumber;
        isDeprecated: boolean;
        isDelisted: boolean;
        barCalcParams: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        };
        maxTotalDeposit: BigNumber;
      },
      [
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        }
      ],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      id: BigNumber;
      bucket: [
        string,
        string,
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[],
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        },
        [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        },
        [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        },
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        },
        BigNumber
      ] & {
        bucketAddress: string;
        name: string;
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        bar: BigNumber;
        lar: BigNumber;
        supply: BigNumber;
        demand: BigNumber;
        availableLiquidity: BigNumber;
        utilizationRatio: BigNumber;
        supportedAssets: ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[];
        pToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        debtToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        feeBuffer: BigNumber;
        withdrawalFeeRate: BigNumber;
        miningParams: [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        };
        lenderInfo: [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        };
        lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        };
        estimatedBar: BigNumber;
        estimatedLar: BigNumber;
        isDeprecated: boolean;
        isDelisted: boolean;
        barCalcParams: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        };
        maxTotalDeposit: BigNumber;
      };
      pair: [
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        }
      ];
      positionSize: BigNumber;
      liquidationPrice: BigNumber;
      stopLossPrice: BigNumber;
      takeProfitPrice: BigNumber;
      debt: BigNumber;
      depositAmount: BigNumber;
      createdAt: BigNumber;
    }
  >;

  getOpenPositionsWithConditions(
    _positionManager: string,
    _cursor: BigNumberish,
    _count: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([
        [
          BigNumber,
          BigNumber,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          string
        ] & {
          id: BigNumber;
          scaledDebtAmount: BigNumber;
          bucket: string;
          soldAsset: string;
          depositAmountInSoldAsset: BigNumber;
          positionAsset: string;
          positionAmount: BigNumber;
          trader: string;
          openBorrowIndex: BigNumber;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        },
        ([BigNumber, string] & { managerType: BigNumber; params: string })[]
      ] & {
        positionData: [
          BigNumber,
          BigNumber,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          string
        ] & {
          id: BigNumber;
          scaledDebtAmount: BigNumber;
          bucket: string;
          soldAsset: string;
          depositAmountInSoldAsset: BigNumber;
          positionAsset: string;
          positionAmount: BigNumber;
          trader: string;
          openBorrowIndex: BigNumber;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        };
        conditionsData: ([BigNumber, string] & {
          managerType: BigNumber;
          params: string;
        })[];
      })[],
      BigNumber
    ] & {
      openPositionsWithConditions: ([
        [
          BigNumber,
          BigNumber,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          string
        ] & {
          id: BigNumber;
          scaledDebtAmount: BigNumber;
          bucket: string;
          soldAsset: string;
          depositAmountInSoldAsset: BigNumber;
          positionAsset: string;
          positionAmount: BigNumber;
          trader: string;
          openBorrowIndex: BigNumber;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        },
        ([BigNumber, string] & { managerType: BigNumber; params: string })[]
      ] & {
        positionData: [
          BigNumber,
          BigNumber,
          string,
          string,
          BigNumber,
          string,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          string
        ] & {
          id: BigNumber;
          scaledDebtAmount: BigNumber;
          bucket: string;
          soldAsset: string;
          depositAmountInSoldAsset: BigNumber;
          positionAsset: string;
          positionAmount: BigNumber;
          trader: string;
          openBorrowIndex: BigNumber;
          createdAt: BigNumber;
          updatedConditionsAt: BigNumber;
          extraParams: string;
        };
        conditionsData: ([BigNumber, string] & {
          managerType: BigNumber;
          params: string;
        })[];
      })[];
      newCursor: BigNumber;
    }
  >;

  getPositionMaxDecrease(
    _pm: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPositionStatus(
    _positionManager: string,
    _id: BigNumberish,
    _routes: {
      shares: BigNumberish;
      paths: { dexName: string; encodedPath: BytesLike }[];
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getSupportedAsset(
    _bucket: string,
    _asset: string,
    _trader: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      [BigNumber, boolean, BigNumber, BigNumber] & {
        id: BigNumber;
        isSupported: boolean;
        pairPriceDrop: BigNumber;
        maxLeverage: BigNumber;
      }
    ] & {
      asset: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      properties: [BigNumber, boolean, BigNumber, BigNumber] & {
        id: BigNumber;
        isSupported: boolean;
        pairPriceDrop: BigNumber;
        maxLeverage: BigNumber;
      };
    }
  >;

  getSupportedAssetArray(
    _bucket: string,
    _assets: string[],
    _trader: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      },
      [BigNumber, boolean, BigNumber, BigNumber] & {
        id: BigNumber;
        isSupported: boolean;
        pairPriceDrop: BigNumber;
        maxLeverage: BigNumber;
      }
    ] & {
      asset: [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      };
      properties: [BigNumber, boolean, BigNumber, BigNumber] & {
        id: BigNumber;
        isSupported: boolean;
        pairPriceDrop: BigNumber;
        maxLeverage: BigNumber;
      };
    })[]
  >;

  getTokenArrayMetadata(
    _tokens: string[],
    _trader: string,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string, BigNumber, BigNumber] & {
      tokenAddress: string;
      symbol: string;
      name: string;
      decimals: BigNumber;
      balance: BigNumber;
    })[]
  >;

  getTokenMetadata(
    _token: string,
    _trader: string,
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, BigNumber, BigNumber] & {
      tokenAddress: string;
      symbol: string;
      name: string;
      decimals: BigNumber;
      balance: BigNumber;
    }
  >;

  isStopLossReached(
    _positionManager: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isTakeProfitReached(
    _positionManager: string,
    _id: BigNumberish,
    _routes: {
      shares: BigNumberish;
      paths: { dexName: string; encodedPath: BytesLike }[];
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  takeProfitStopLossCCM(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    getAllBucketsFactory(
      _bucketFactory: string,
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string,
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[],
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        },
        [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        },
        [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        },
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        },
        BigNumber
      ] & {
        bucketAddress: string;
        name: string;
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        bar: BigNumber;
        lar: BigNumber;
        supply: BigNumber;
        demand: BigNumber;
        availableLiquidity: BigNumber;
        utilizationRatio: BigNumber;
        supportedAssets: ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[];
        pToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        debtToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        feeBuffer: BigNumber;
        withdrawalFeeRate: BigNumber;
        miningParams: [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        };
        lenderInfo: [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        };
        lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        };
        estimatedBar: BigNumber;
        estimatedLar: BigNumber;
        isDeprecated: boolean;
        isDelisted: boolean;
        barCalcParams: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        };
        maxTotalDeposit: BigNumber;
      })[]
    >;

    getArrayOpenPositionDataByBucket(
      _positionManager: string,
      _bucket: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[],
        BigNumber
      ] & {
        positionsData: ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[];
        newCursor: BigNumber;
      }
    >;

    getArrayOpenPositionDataByTrader(
      _positionManager: string,
      _trader: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[],
        BigNumber
      ] & {
        positionsData: ([
          BigNumber,
          [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          },
          [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          id: BigNumber;
          bucket: [
            string,
            string,
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[],
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            BigNumber,
            BigNumber,
            [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            },
            [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            },
            [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            },
            BigNumber,
            BigNumber,
            boolean,
            boolean,
            [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            },
            BigNumber
          ] & {
            bucketAddress: string;
            name: string;
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            bar: BigNumber;
            lar: BigNumber;
            supply: BigNumber;
            demand: BigNumber;
            availableLiquidity: BigNumber;
            utilizationRatio: BigNumber;
            supportedAssets: ([
              [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              },
              [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              }
            ] & {
              asset: [string, string, string, BigNumber, BigNumber] & {
                tokenAddress: string;
                symbol: string;
                name: string;
                decimals: BigNumber;
                balance: BigNumber;
              };
              properties: [BigNumber, boolean, BigNumber, BigNumber] & {
                id: BigNumber;
                isSupported: boolean;
                pairPriceDrop: BigNumber;
                maxLeverage: BigNumber;
              };
            })[];
            pToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            debtToken: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            feeBuffer: BigNumber;
            withdrawalFeeRate: BigNumber;
            miningParams: [
              string,
              boolean,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              liquidityMiningRewardDistributor: string;
              isBucketLaunched: boolean;
              accumulatingAmount: BigNumber;
              deadlineTimestamp: BigNumber;
              stabilizationDuration: BigNumber;
              stabilizationEndTimestamp: BigNumber;
              maxAmountPerUser: BigNumber;
              maxDuration: BigNumber;
              maxStabilizationEndTimestamp: BigNumber;
            };
            lenderInfo: [
              BigNumber,
              BigNumber,
              [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              }
            ] & {
              amountInMining: BigNumber;
              currentPercent: BigNumber;
              rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
                minReward: BigNumber;
                maxReward: BigNumber;
                extraReward: BigNumber;
              };
            };
            lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
              pmxAmount: BigNumber;
              withdrawnRewards: BigNumber;
              totalPoints: BigNumber;
            };
            estimatedBar: BigNumber;
            estimatedLar: BigNumber;
            isDeprecated: boolean;
            isDelisted: boolean;
            barCalcParams: [
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber,
              BigNumber
            ] & {
              urOptimal: BigNumber;
              k0: BigNumber;
              k1: BigNumber;
              b0: BigNumber;
              b1: BigNumber;
            };
            maxTotalDeposit: BigNumber;
          };
          pair: [
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            }
          ];
          positionSize: BigNumber;
          liquidationPrice: BigNumber;
          stopLossPrice: BigNumber;
          takeProfitPrice: BigNumber;
          debt: BigNumber;
          depositAmount: BigNumber;
          createdAt: BigNumber;
        })[];
        newCursor: BigNumber;
      }
    >;

    getAssetMetadata(
      _bucket: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, boolean, BigNumber, BigNumber] & {
        id: BigNumber;
        isSupported: boolean;
        pairPriceDrop: BigNumber;
        maxLeverage: BigNumber;
      }
    >;

    getBucket(
      _bucket: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[],
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        },
        [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        },
        [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        },
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        },
        BigNumber
      ] & {
        bucketAddress: string;
        name: string;
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        bar: BigNumber;
        lar: BigNumber;
        supply: BigNumber;
        demand: BigNumber;
        availableLiquidity: BigNumber;
        utilizationRatio: BigNumber;
        supportedAssets: ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[];
        pToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        debtToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        feeBuffer: BigNumber;
        withdrawalFeeRate: BigNumber;
        miningParams: [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        };
        lenderInfo: [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        };
        lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        };
        estimatedBar: BigNumber;
        estimatedLar: BigNumber;
        isDeprecated: boolean;
        isDelisted: boolean;
        barCalcParams: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        };
        maxTotalDeposit: BigNumber;
      }
    >;

    getBucketsArray(
      _buckets: string[],
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string,
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[],
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        BigNumber,
        BigNumber,
        [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        },
        [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        },
        [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        },
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        },
        BigNumber
      ] & {
        bucketAddress: string;
        name: string;
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        bar: BigNumber;
        lar: BigNumber;
        supply: BigNumber;
        demand: BigNumber;
        availableLiquidity: BigNumber;
        utilizationRatio: BigNumber;
        supportedAssets: ([
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          }
        ] & {
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          properties: [BigNumber, boolean, BigNumber, BigNumber] & {
            id: BigNumber;
            isSupported: boolean;
            pairPriceDrop: BigNumber;
            maxLeverage: BigNumber;
          };
        })[];
        pToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        debtToken: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        feeBuffer: BigNumber;
        withdrawalFeeRate: BigNumber;
        miningParams: [
          string,
          boolean,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          liquidityMiningRewardDistributor: string;
          isBucketLaunched: boolean;
          accumulatingAmount: BigNumber;
          deadlineTimestamp: BigNumber;
          stabilizationDuration: BigNumber;
          stabilizationEndTimestamp: BigNumber;
          maxAmountPerUser: BigNumber;
          maxDuration: BigNumber;
          maxStabilizationEndTimestamp: BigNumber;
        };
        lenderInfo: [
          BigNumber,
          BigNumber,
          [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          }
        ] & {
          amountInMining: BigNumber;
          currentPercent: BigNumber;
          rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
            minReward: BigNumber;
            maxReward: BigNumber;
            extraReward: BigNumber;
          };
        };
        lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
          pmxAmount: BigNumber;
          withdrawnRewards: BigNumber;
          totalPoints: BigNumber;
        };
        estimatedBar: BigNumber;
        estimatedLar: BigNumber;
        isDeprecated: boolean;
        isDelisted: boolean;
        barCalcParams: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          urOptimal: BigNumber;
          k0: BigNumber;
          k1: BigNumber;
          b0: BigNumber;
          b1: BigNumber;
        };
        maxTotalDeposit: BigNumber;
      })[]
    >;

    getChainlinkLatestRoundData(
      _feeds: string[],
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        roundId: BigNumber;
        answer: BigNumber;
        startedAt: BigNumber;
        updatedAt: BigNumber;
        answeredInRound: BigNumber;
      })[]
    >;

    getLMBucketInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        pmxAmount: BigNumber;
        withdrawnRewards: BigNumber;
        totalPoints: BigNumber;
      }
    >;

    getLenderInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      user: string,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        }
      ] & {
        amountInMining: BigNumber;
        currentPercent: BigNumber;
        rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
          minReward: BigNumber;
          maxReward: BigNumber;
          extraReward: BigNumber;
        };
      }
    >;

    getLimitOrdersWithConditions(
      _limitOrderManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          limitOrderData: [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          openConditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[],
        BigNumber
      ] & {
        limitOrdersWithConditions: ([
          [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          limitOrderData: [
            string,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            boolean,
            BigNumber,
            BigNumber,
            string
          ] & {
            bucket: string;
            positionAsset: string;
            depositAsset: string;
            depositAmount: BigNumber;
            feeToken: string;
            protocolFee: BigNumber;
            trader: string;
            deadline: BigNumber;
            id: BigNumber;
            leverage: BigNumber;
            shouldOpenPosition: boolean;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          openConditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[];
        newCursor: BigNumber;
      }
    >;

    "getLiquidationPrice(address,string,uint256,address,uint256)"(
      _positionManager: string,
      _bucket: string,
      _borrowedAmount: BigNumberish,
      _positionAsset: string,
      _positionAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLiquidationPrice(address,uint256)"(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpenPositionData(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        },
        [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        id: BigNumber;
        bucket: [
          string,
          string,
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[],
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          BigNumber,
          BigNumber,
          [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          },
          [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          },
          [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          },
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          },
          BigNumber
        ] & {
          bucketAddress: string;
          name: string;
          asset: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          bar: BigNumber;
          lar: BigNumber;
          supply: BigNumber;
          demand: BigNumber;
          availableLiquidity: BigNumber;
          utilizationRatio: BigNumber;
          supportedAssets: ([
            [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            },
            [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            }
          ] & {
            asset: [string, string, string, BigNumber, BigNumber] & {
              tokenAddress: string;
              symbol: string;
              name: string;
              decimals: BigNumber;
              balance: BigNumber;
            };
            properties: [BigNumber, boolean, BigNumber, BigNumber] & {
              id: BigNumber;
              isSupported: boolean;
              pairPriceDrop: BigNumber;
              maxLeverage: BigNumber;
            };
          })[];
          pToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          debtToken: [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          };
          feeBuffer: BigNumber;
          withdrawalFeeRate: BigNumber;
          miningParams: [
            string,
            boolean,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            liquidityMiningRewardDistributor: string;
            isBucketLaunched: boolean;
            accumulatingAmount: BigNumber;
            deadlineTimestamp: BigNumber;
            stabilizationDuration: BigNumber;
            stabilizationEndTimestamp: BigNumber;
            maxAmountPerUser: BigNumber;
            maxDuration: BigNumber;
            maxStabilizationEndTimestamp: BigNumber;
          };
          lenderInfo: [
            BigNumber,
            BigNumber,
            [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            }
          ] & {
            amountInMining: BigNumber;
            currentPercent: BigNumber;
            rewardsInPMX: [BigNumber, BigNumber, BigNumber] & {
              minReward: BigNumber;
              maxReward: BigNumber;
              extraReward: BigNumber;
            };
          };
          lmBucketInfo: [BigNumber, BigNumber, BigNumber] & {
            pmxAmount: BigNumber;
            withdrawnRewards: BigNumber;
            totalPoints: BigNumber;
          };
          estimatedBar: BigNumber;
          estimatedLar: BigNumber;
          isDeprecated: boolean;
          isDelisted: boolean;
          barCalcParams: [
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            urOptimal: BigNumber;
            k0: BigNumber;
            k1: BigNumber;
            b0: BigNumber;
            b1: BigNumber;
          };
          maxTotalDeposit: BigNumber;
        };
        pair: [
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          },
          [string, string, string, BigNumber, BigNumber] & {
            tokenAddress: string;
            symbol: string;
            name: string;
            decimals: BigNumber;
            balance: BigNumber;
          }
        ];
        positionSize: BigNumber;
        liquidationPrice: BigNumber;
        stopLossPrice: BigNumber;
        takeProfitPrice: BigNumber;
        debt: BigNumber;
        depositAmount: BigNumber;
        createdAt: BigNumber;
      }
    >;

    getOpenPositionsWithConditions(
      _positionManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          positionData: [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          conditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[],
        BigNumber
      ] & {
        openPositionsWithConditions: ([
          [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          },
          ([BigNumber, string] & { managerType: BigNumber; params: string })[]
        ] & {
          positionData: [
            BigNumber,
            BigNumber,
            string,
            string,
            BigNumber,
            string,
            BigNumber,
            string,
            BigNumber,
            BigNumber,
            BigNumber,
            string
          ] & {
            id: BigNumber;
            scaledDebtAmount: BigNumber;
            bucket: string;
            soldAsset: string;
            depositAmountInSoldAsset: BigNumber;
            positionAsset: string;
            positionAmount: BigNumber;
            trader: string;
            openBorrowIndex: BigNumber;
            createdAt: BigNumber;
            updatedConditionsAt: BigNumber;
            extraParams: string;
          };
          conditionsData: ([BigNumber, string] & {
            managerType: BigNumber;
            params: string;
          })[];
        })[];
        newCursor: BigNumber;
      }
    >;

    getPositionMaxDecrease(
      _pm: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPositionStatus(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: CallOverrides
    ): Promise<
      [boolean, boolean, boolean] & {
        liquidationThreshold: boolean;
        takeProfitReached: boolean;
        stopLossReached: boolean;
      }
    >;

    getSupportedAsset(
      _bucket: string,
      _asset: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      }
    >;

    getSupportedAssetArray(
      _bucket: string,
      _assets: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        },
        [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        }
      ] & {
        asset: [string, string, string, BigNumber, BigNumber] & {
          tokenAddress: string;
          symbol: string;
          name: string;
          decimals: BigNumber;
          balance: BigNumber;
        };
        properties: [BigNumber, boolean, BigNumber, BigNumber] & {
          id: BigNumber;
          isSupported: boolean;
          pairPriceDrop: BigNumber;
          maxLeverage: BigNumber;
        };
      })[]
    >;

    getTokenArrayMetadata(
      _tokens: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      })[]
    >;

    getTokenMetadata(
      _token: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, BigNumber, BigNumber] & {
        tokenAddress: string;
        symbol: string;
        name: string;
        decimals: BigNumber;
        balance: BigNumber;
      }
    >;

    isStopLossReached(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isTakeProfitReached(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    takeProfitStopLossCCM(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getAllBucketsFactory(
      _bucketFactory: string,
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArrayOpenPositionDataByBucket(
      _positionManager: string,
      _bucket: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArrayOpenPositionDataByTrader(
      _positionManager: string,
      _trader: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAssetMetadata(
      _bucket: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBucket(
      _bucket: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBucketsArray(
      _buckets: string[],
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getChainlinkLatestRoundData(
      _feeds: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLMBucketInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLenderInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLimitOrdersWithConditions(
      _limitOrderManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLiquidationPrice(address,string,uint256,address,uint256)"(
      _positionManager: string,
      _bucket: string,
      _borrowedAmount: BigNumberish,
      _positionAsset: string,
      _positionAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLiquidationPrice(address,uint256)"(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpenPositionData(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpenPositionsWithConditions(
      _positionManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPositionMaxDecrease(
      _pm: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPositionStatus(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getSupportedAsset(
      _bucket: string,
      _asset: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSupportedAssetArray(
      _bucket: string,
      _assets: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenArrayMetadata(
      _tokens: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenMetadata(
      _token: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isStopLossReached(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isTakeProfitReached(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    takeProfitStopLossCCM(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getAllBucketsFactory(
      _bucketFactory: string,
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArrayOpenPositionDataByBucket(
      _positionManager: string,
      _bucket: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArrayOpenPositionDataByTrader(
      _positionManager: string,
      _trader: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAssetMetadata(
      _bucket: string,
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBucket(
      _bucket: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBucketsArray(
      _buckets: string[],
      _user: string,
      _positionManager: string,
      _showDeprecated: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getChainlinkLatestRoundData(
      _feeds: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLMBucketInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLenderInfo(
      liquidityMiningRewardDistributor: string,
      bucketName: string,
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLimitOrdersWithConditions(
      _limitOrderManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLiquidationPrice(address,string,uint256,address,uint256)"(
      _positionManager: string,
      _bucket: string,
      _borrowedAmount: BigNumberish,
      _positionAsset: string,
      _positionAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLiquidationPrice(address,uint256)"(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOpenPositionData(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOpenPositionsWithConditions(
      _positionManager: string,
      _cursor: BigNumberish,
      _count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPositionMaxDecrease(
      _pm: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPositionStatus(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getSupportedAsset(
      _bucket: string,
      _asset: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedAssetArray(
      _bucket: string,
      _assets: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenArrayMetadata(
      _tokens: string[],
      _trader: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenMetadata(
      _token: string,
      _trader: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isStopLossReached(
      _positionManager: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isTakeProfitReached(
      _positionManager: string,
      _id: BigNumberish,
      _routes: {
        shares: BigNumberish;
        paths: { dexName: string; encodedPath: BytesLike }[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    takeProfitStopLossCCM(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
